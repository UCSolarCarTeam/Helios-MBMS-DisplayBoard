// This file was generated by SquareLine Studio
// SquareLine Studio version: SquareLine Studio 1.5.0
// LVGL version: 8.3.11
// Project name: MBMS_Display

#ifndef _MBMS_DISPLAY_UI_H
#define _MBMS_DISPLAY_UI_H

#ifdef __cplusplus
extern "C" {
#endif

#if defined __has_include
#if __has_include("lvgl.h")
#include "lvgl.h"
#elif __has_include("lvgl/lvgl.h")
#include "lvgl/lvgl.h"
#else
#include "lvgl.h"
#endif
#else
#include "lvgl.h"
#endif

#include "ui_helpers.h"
#include "ui_events.h"

// SCREEN: ui_HomeScreen
void ui_HomeScreen_screen_init(void);
extern lv_obj_t * ui_HomeScreen;
void ui_event_ContactorStatusBtn(lv_event_t * e);
extern lv_obj_t * ui_ContactorStatusBtn;
extern lv_obj_t * ui_ContactorStatusLabel;
extern lv_obj_t * ui_TripBtn;
extern lv_obj_t * ui_TripLabel;
extern lv_obj_t * ui_BatteryBtn;
extern lv_obj_t * ui_BatteryLabel;
extern lv_obj_t * ui_MBMSBtn;
extern lv_obj_t * ui_MBMSLabel;
extern lv_obj_t * ui_PowerSelectBtn;
extern lv_obj_t * ui_PowerSelectLabel;
// CUSTOM VARIABLES

// SCREEN: ui_Contactor_Screen
void ui_Contactor_Screen_screen_init(void);
extern lv_obj_t * ui_Contactor_Screen;
extern lv_obj_t * ui_TableHeader;
extern lv_obj_t * ui_ContactorTableHeader;
extern lv_obj_t * ui_StateTableHeader;
extern lv_obj_t * ui_AmpTableHeader;
extern lv_obj_t * ui_VoltTableHeader;
extern lv_obj_t * ui_HeartbeatIcon;
extern lv_obj_t * ui_CommonRowContainer;
extern lv_obj_t * ui_CommonCheck;
extern lv_obj_t * ui_CommonContactorLabel;
extern lv_obj_t * ui_CommonState;
extern lv_obj_t * ui_CommonA;
extern lv_obj_t * ui_CommonV;
extern lv_obj_t * ui_MotorRowContainer;
extern lv_obj_t * ui_MotorContactorLabel;
extern lv_obj_t * ui_MotorState;
extern lv_obj_t * ui_MotorCheck;
extern lv_obj_t * ui_MotorA;
extern lv_obj_t * ui_MotorV;
extern lv_obj_t * ui_ArrayRowContainer;
extern lv_obj_t * ui_ArrayContactorLabel;
extern lv_obj_t * ui_ArrayState;
extern lv_obj_t * ui_ArrayCheck;
extern lv_obj_t * ui_ArrayA;
extern lv_obj_t * ui_ArrayV;
extern lv_obj_t * ui_LowVRowContainer;
extern lv_obj_t * ui_LowVContactorLabel;
extern lv_obj_t * ui_LowVState;
extern lv_obj_t * ui_LowVCheck;
extern lv_obj_t * ui_LowVA;
extern lv_obj_t * ui_LowVV;
extern lv_obj_t * ui_ChargeRowContainer;
extern lv_obj_t * ui_ChargeContactorLabel;
extern lv_obj_t * ui_ChargeState;
extern lv_obj_t * ui_ChargeCheck;
extern lv_obj_t * ui_ChargeA;
extern lv_obj_t * ui_ChargeV;
extern lv_obj_t * ui_PreChargerRowContainer;
extern lv_obj_t * ui_PreChargerContactorLabel;
extern lv_obj_t * ui_PreChargerState;
extern lv_obj_t * ui_PreChargerCheck;
extern lv_obj_t * ui_PreChargerA;
extern lv_obj_t * ui_PreChargerV;
extern lv_obj_t * ui_ContactorColumnContainer;
extern lv_obj_t * ui_StateColumnContainer;
extern lv_obj_t * ui_HeartbeatColumnContainer;
extern lv_obj_t * ui_AmpColumnContainer;
// CUSTOM VARIABLES

// SCREEN: ui_TripScreen
void ui_TripScreen_screen_init(void);
extern lv_obj_t * ui_TripScreen;
extern lv_obj_t * ui_HighCellVoltageTrip;
extern lv_obj_t * ui_LowCellVoltageTrip;
extern lv_obj_t * ui_Header;
extern lv_obj_t * ui_CommonHighCurrTrip;
extern lv_obj_t * ui_MotorHighCurrTrip;
extern lv_obj_t * ui_ArrayHighCurrTrip;
extern lv_obj_t * ui_LVHighCurrTrip;
extern lv_obj_t * ui_ChargeHighCurrTrip;
extern lv_obj_t * ui_ProtectionTrip;
extern lv_obj_t * ui_OrionMsgTimeoutTrip;
extern lv_obj_t * ui_HighBatteryTrip;
extern lv_obj_t * ui_ESDEnabledTrip;
extern lv_obj_t * ui_HighTempTrip;
extern lv_obj_t * ui_MPSDisabledTrip;
extern lv_obj_t * ui_LowTempTrip;
extern lv_obj_t * ui_CommonHeartBeatTrip;
extern lv_obj_t * ui_MotorHeartbeatTrip;
extern lv_obj_t * ui_ArrayHeartbeatTrip;
extern lv_obj_t * ui_ChargeHeartbeatTrip;
extern lv_obj_t * ui_ContactorDisconnectedUnexpectedlyTrip;
extern lv_obj_t * ui_ContactorConnectedUnexpectedlyTrip;
extern lv_obj_t * ui_LVHeartBeatTrip;
// CUSTOM VARIABLES

// SCREEN: ui_BatteryInfoScreen
void ui_BatteryInfoScreen_screen_init(void);
extern lv_obj_t * ui_BatteryInfoScreen;
extern lv_obj_t * ui_AmphoursLabel;
extern lv_obj_t * ui_PackCurrentVLabel;
extern lv_obj_t * ui_PackCurrentALabel;
extern lv_obj_t * ui_StateOfChargeLabel;
extern lv_obj_t * ui_LowTempLabel;
extern lv_obj_t * ui_MaxCellVoltageLabel;
extern lv_obj_t * ui_AvgTempLabel;
extern lv_obj_t * ui_HighTempLabel;
extern lv_obj_t * ui_MinCellVoltageLabel;
extern lv_obj_t * ui_MaxPackVoltageLabel;
extern lv_obj_t * ui_MinPackVoltageLabel;
extern lv_obj_t * ui_DepthofDischargeLabel;
extern lv_obj_t * ui_PackCurrentVal;
extern lv_obj_t * ui_AmpHoursVal;
extern lv_obj_t * ui_PackVoltageVal;
extern lv_obj_t * ui_StateOfChargeVal;
extern lv_obj_t * ui_DepthOfDischargeVal;
extern lv_obj_t * ui_LowTempVal;
extern lv_obj_t * ui_AvgTempVal;
extern lv_obj_t * ui_HighTempVal;
extern lv_obj_t * ui_MaxCellVoltageVal;
extern lv_obj_t * ui_MinPackVoltageVal;
extern lv_obj_t * ui_MinCellVoltageVal;
extern lv_obj_t * ui_MaxPackVoltageVal;
extern lv_obj_t * ui_BatteryInfoHeader;
// CUSTOM VARIABLES

// SCREEN: ui_MBMSStatusScreen
void ui_MBMSStatusScreen_screen_init(void);
extern lv_obj_t * ui_MBMSStatusScreen;
extern lv_obj_t * ui_AllowChargeCheck;
extern lv_obj_t * ui_AuxiliaryBatteryVoltageLabel;
extern lv_obj_t * ui_OrionCanReceivedCheck;
extern lv_obj_t * ui_DischargeShouldTripCheck;
extern lv_obj_t * ui_ChargeShouldTripCheck;
extern lv_obj_t * ui_StrobeBMSLightCheck;
extern lv_obj_t * ui_StartupStateLabel;
extern lv_obj_t * ui_AllowDischargeCheck;
extern lv_obj_t * ui_ChargeSafetyCheck;
extern lv_obj_t * ui_AuxBatteryVoltageVal;
extern lv_obj_t * ui_StartupStateVal;
extern lv_obj_t * ui_MBMSStatusHeader;
extern lv_obj_t * ui_HighVoltageEnableStateCheck;
// CUSTOM VARIABLES

// EVENTS

extern lv_obj_t * ui____initial_actions0;

// IMAGES AND IMAGE SETS
LV_IMG_DECLARE(
    ui_img_heart_app_icon_red_outline_black_background_png);    // assets/heart app icon red outline black background.png

// UI INIT
void ui_init(void);

#ifdef __cplusplus
} /*extern "C"*/
#endif

#endif
